Árbol de Components (Component Tree en inglés)


<Acá puede venir una referencia de esto, que aplicaciones tiene, etc>

Definición

Para entender de un modo intuitivo qué es el árbol de componentes de una
imgen, podemos verla como un relive topográfico completamente sumergida en
agua, a la que se le hacen perforaciones en sus mínimos. El nivel de agua irá
decreciendo lentamente, y empezarán a verse islas (correspondientes a los
máximos de la imagen), estas islas serán las hojas del árbol. A medida que el
nivel de agua continue decreciendo, las islas irán creciendo, conformando lo que
serán las ramas del árbol. Luego, a partir de algún nivel, puede que algunas
islas se fusionen formando una sola pieza, estas piezas serán forks del árbol.
El proceso terminará cuando toda el agua haya desaparecido.

De un modo más técnico, podemos definir el árbol de componentes, como un árbol
con raíz que cumple con estas dos propiedades:
  *) los nodos son elementos de C(F)
  *) habrá un arco de c' ∈ Ck(F) hacia la componente c ∈ Cj(F) si j = k+1 y c ⊆
c'

En este caso, se dice que c es hijo de c' y que c' es padre de c. Además, las
componentes que no tiene hijos, se denominan hojas, mientras que las que no
tienen padre, raíces.

Junto al árbol de componentes, tendremeos también el denominado mapeo de
componentes, que para cada pixel de nivel k de la imagen, asociará la
componente que contiene a p en Ck(F).

Implementación



Conjuntos Disjuntos

El problema de los conjuntos disjuntos consiste en mantener una colección Q de
subconjuntos disjuntos, de un conjunto E. Cada conjunto X en Q será
representado por un único elemento de X, llamando elemento canónico. Sean x e
y dos elementos distintos de E, las operaciones que pueden hacerse sobre Q serán
las siguientes:
  *) MakeSet(x): agrega el conjunto {x} a Q.
  *) Find(x): retorna el elemento canónico del conjunto al que pertenece x.
  *) Link(x,y): sean X e Y dos conjuntos de Q con elemento canónico x e y
respectivamente, entonces esta operación borrar ambos conjuntos de Q y agregará
el conjunto Z = X ∪ Y, y retornará el elemento canónico de Z.

Esta estructura será utilizada para determinar las componentes conectadas





